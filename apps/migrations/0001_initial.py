# Generated by Django 4.2.6 on 2024-02-12 19:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('timezone', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=300)),
                ('company_website', models.URLField(blank=True, default=None, null=True)),
                ('contractor_type', multiselectfield.db.fields.MultiSelectField(choices=[('Contractor', 'Contractor'), ('Sub_Contractor', 'Sub Contractor'), ('General Contractor', 'General Contractor'), ('completed', 'Completed')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('company_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.address')),
            ],
        ),
        migrations.CreateModel(
            name='Company_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_construction', multiselectfield.db.fields.MultiSelectField(choices=[('RESIDENTIAL', 'Residential'), ('COMMERCIAL', 'Commercial'), ('INDUSTRIAL', 'Industrial')], max_length=200)),
                ('csi_division', multiselectfield.db.fields.MultiSelectField(choices=[('General_Requirements', 'General Requirements'), ('Existing_Conditions', 'Existing Conditions'), ('Concrete', 'Concrete'), ('Masonry', 'Masonry'), ('Metals', 'Metals'), ('Wood_Plastics_and_Composites', 'Wood, Plastics, and Composites'), ('Thermal_and_Moisture_Protection', 'Thermal and Moisture Protection'), ('Openings', 'Openings'), ('Finishes', 'Finishes'), ('Specialties', 'Specialties'), ('Equipment', 'Equipment'), ('Furnishings', 'Furnishings'), ('Special_Construction', 'Special Construction'), ('Conveying_Equipment', 'Conveying Equipment'), ('Plumbing_HVAC', 'Plumbing + HVAC'), ('Electrical_Lighting', 'Electrical + Lighting'), ('Reserved_For_Future_Expansion_1', 'RESERVED FOR FUTURE EXPANSION'), ('Reserved_For_Future_Expansion_2', 'RESERVED FOR FUTURE EXPANSION'), ('Reserved_For_Future_Expansion_3', 'RESERVED FOR FUTURE EXPANSION'), ('Mechanical_Support', 'Mechanical Support'), ('Fire_Suppression', 'Fire Suppression'), ('Plumbing', 'Plumbing'), ('HVAC', 'Heating Ventilating and Air Conditioning'), ('Reserved_For_Future_Expansion_4', 'RESERVED FOR FUTURE EXPANSION'), ('Integrated_Automation', 'Integrated Automation'), ('Electrical', 'Electrical'), ('Communications', 'Communications'), ('Electronic_Safety_and_Security', 'Electronic Safety and Security'), ('Reserved_For_Future_Expansion_5', 'RESERVED FOR FUTURE EXPANSION'), ('Reserved_For_Future_Expansion_6', 'RESERVED FOR FUTURE EXPANSION'), ('Earthwork', 'Earthwork'), ('Exterior_Improvements', 'Exterior Improvements'), ('Utilities', 'Utilities'), ('Transportation', 'Transportation'), ('Waterways_and_Marine_Construction', 'Waterways and Marine Construction'), ('Reserved_For_Future_Expansion_7', 'RESERVED FOR FUTURE EXPANSION'), ('Reserved_For_Future_Expansion_8', 'RESERVED FOR FUTURE EXPANSION'), ('Reserved_For_Future_Expansion_9', 'RESERVED FOR FUTURE EXPANSION'), ('Reserved_For_Future_Expansion_10', 'RESERVED FOR FUTURE EXPANSION'), ('Process_Interconnections', 'Process Interconnections'), ('Material_Processing_and_Handling_Equipment', 'Material Processing and Handling Equipment'), ('Process_Heating_Cooling_and_Drying_Equipment', 'Process Heating, Cooling, and Drying Equipment'), ('Process_Gas_and_Liquid_Handling_Purification_and_Storage_Equipment', 'Process Gas and Liquid Handling, Purification and Storage Equipment'), ('Pollution_Control_Equipment', 'Pollution Control Equipment'), ('Industry-Specific_Manufacturing_Equipment', 'Industry-Specific Manufacturing Equipment'), ('Water_and_Wastewater_Equipment', 'Water and Wastewater Equipment'), ('Reserved_For_Future_Expansion_11', 'RESERVED FOR FUTURE EXPANSION'), ('Electrical_Power_Generation', 'Electrical Power Generation'), ('Reserved_For_Future_Expansion_12', 'RESERVED FOR FUTURE EXPANSION')], max_length=200)),
                ('year_founded', models.IntegerField(blank=True, null=True)),
                ('size', models.CharField(max_length=100)),
                ('equipment_and_resources', models.TextField()),
                ('insurance_information', models.TextField()),
                ('financial_information', models.TextField()),
                ('notes_and_comments', models.TextField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrmCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images/company')),
                ('name', models.CharField(max_length=150)),
                ('owner_name', models.CharField(max_length=50)),
                ('industry_type', models.CharField(choices=[('', 'Select industry type'), ('Computer Industry', 'Computer Industry'), ('Chemical Industries', 'Chemical Industries'), ('Health Services', 'Health Services'), ('Telecommunications Services', 'Telecommunications Services'), ('Textiles: Clothing, Footwear', 'Textiles: Clothing, Footwear')], max_length=50)),
                ('rating', models.CharField(max_length=10)),
                ('location', models.CharField(max_length=150)),
                ('employee', models.CharField(max_length=10)),
                ('website', models.CharField(max_length=150)),
                ('contact_email', models.EmailField(max_length=150, unique=True)),
                ('since', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Crm Companies',
            },
        ),
        migrations.CreateModel(
            name='CrmLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/leads')),
                ('name', models.CharField(max_length=50)),
                ('company_name', models.CharField(max_length=150)),
                ('lead_score', models.IntegerField()),
                ('phone', models.CharField(max_length=13)),
                ('location', models.CharField(max_length=150)),
                ('tags', multiselectfield.db.fields.MultiSelectField(choices=[('Exiting', 'Exiting'), ('Lead', 'Lead'), ('Long-term', 'Long-term'), ('Partner', 'Partner')], max_length=50)),
                ('create_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='EcommerceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('product', models.CharField(choices=[('Puma Tshirt', 'Puma Tshirt'), ('Adidas Sneakers', 'Adidas Sneakers'), ('350 ml Glass Grocery Container', '350 ml Glass Grocery Container'), ('American egale outfitters Shirt', 'American egale outfitters Shirt'), ('Galaxy Watch4', 'Galaxy Watch4'), ('Apple iPhone 12', 'Apple iPhone 12'), ('Funky Prints T-shirt', 'Funky Prints T-shirt'), ('USB Flash Drive Personalized with 3D Print', 'USB Flash Drive Personalized with 3D Print'), ('Oxford Button-Down Shirt', 'Oxford Button-Down Shirt'), ('Classic Short Sleeve Shirt', 'Classic Short Sleeve Shirt'), ('Half Sleeve T-Shirts (Blue)', 'Half Sleeve T-Shirts (Blue)'), ('Noise Evolve Smartwatch', 'Noise Evolve Smartwatch')], max_length=150)),
                ('order_date', models.DateTimeField()),
                ('amount', models.CharField(max_length=10)),
                ('payment_method', models.CharField(choices=[('Mastercard', 'Mastercard'), ('Visa', 'Visa'), ('COD', 'COD'), ('Paypal', 'Paypal')], max_length=50)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Inprogress', 'Inprogress'), ('Cancelled', 'Cancelled'), ('Pickups', 'Pickups'), ('Returns', 'Returns'), ('Delivered', 'Delivered')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/job/application')),
                ('company_name', models.CharField(max_length=150)),
                ('designation', models.CharField(max_length=150)),
                ('apply_date', models.DateField()),
                ('contact', models.CharField(max_length=13)),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('New', 'New'), ('Pending', 'Pending'), ('Rejected', 'Rejected')], max_length=15)),
                ('type', models.CharField(choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('status', multiselectfield.db.fields.MultiSelectField(choices=[('Started', 'Started'), ('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('Closed', 'Closed')], default='pending', max_length=20)),
                ('addendum_files', models.FileField(blank=True, null=True, upload_to='project_addendum/')),
                ('project_files', models.FileField(blank=True, null=True, upload_to='project_files/')),
                ('estimation_files', models.FileField(blank=True, null=True, upload_to='project_estimation/')),
                ('Addendum_Date', models.DateTimeField(blank=True, null=True)),
                ('Project_Posted_Date', models.DateTimeField(blank=True, null=True)),
                ('Project_Bid_Date', models.DateTimeField(blank=True, null=True)),
                ('Project_Work_Started_Date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project_address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.address')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_Project', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_Project', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_Project', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('client_name', models.CharField(max_length=100)),
                ('assign_to', models.CharField(max_length=150)),
                ('create_date', models.DateField()),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('Closed', 'Closed'), ('Inprogress', 'Inprogress'), ('New', 'New'), ('Open', 'Open')], max_length=10)),
                ('priority', models.CharField(choices=[('High', 'High'), ('Low', 'Low'), ('Medium', 'Medium')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Solicitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('solicitation_date', models.DateField(blank=True, null=True)),
                ('liquidated_damages', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pre_bid_meeting_date', models.DateField(blank=True, null=True)),
                ('pre_bid_meeting_notes', models.TextField(blank=True, null=True)),
                ('bid_bond', models.DecimalField(blank=True, decimal_places=2, default=15, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('performance_bond', models.DecimalField(blank=True, decimal_places=2, default=15, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('payment_bond_percentage', models.DecimalField(blank=True, decimal_places=2, default=100, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('bid_date', models.DateField(blank=True, null=True)),
                ('bid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bid_location', models.CharField(blank=True, max_length=100, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSpecifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specifications_file', models.FileField(upload_to='project_specifications/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_ProjectSpecifications', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_ProjectSpecifications', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_ProjectSpecifications', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_ProjectSpecifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Plans_file', models.FileField(upload_to='project_plans/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_ProjectPlans', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_ProjectPlans', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_ProjectPlans', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_ProjectPlans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEstimation_misc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimation_misc_file', models.FileField(upload_to='project_estimation/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_Estimation', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_Estimation', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_Estimation', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_Estimation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAddendum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Addendum_file', models.FileField(upload_to='project_addendum/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_ProjectAddendum', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_ProjectAddendum', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_ProjectAddendum', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_ProjectAddendum', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project_Takeoff_Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('takeoff_file', models.FileField(upload_to='project_Takeoff_documets/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_Takeoff_Documents', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_Takeoff_Documents', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_Takeoff_Documents', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_Takeoff_Documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project_swift_file_Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('swift_file', models.FileField(upload_to='project_swift_file_documets/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_swift_file', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_swift_file', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_swift_file', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_swift_file', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project_Misclinius_Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('misclinius_file', models.FileField(upload_to='project_Misclinius_documets/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_Misclinius_Document', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_Misclinius_Document', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_Misclinius_Document', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_Misclinius_Document', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project_Drawings_Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawings_file', models.FileField(upload_to='project_drawing_documets/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_Drawings', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_Drawings', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_Drawings', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_Drawings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project_Bid_Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_file', models.FileField(upload_to='project_bid_documets/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_Bid_Documents', to=settings.AUTH_USER_MODEL)),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_Bid_Documents', to=settings.AUTH_USER_MODEL)),
                ('user_restored', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_Bid_Documents', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_Bid_Documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/contact')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone_no', models.CharField(max_length=20)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.address')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.company')),
            ],
        ),
        migrations.CreateModel(
            name='MWSEBsAndSDVOBs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mwsebs', models.DecimalField(blank=True, decimal_places=2, default=15, max_digits=5, null=True)),
                ('sdvobs', models.DecimalField(blank=True, decimal_places=2, default=15, max_digits=5, null=True)),
                ('MBE', models.DecimalField(blank=True, decimal_places=2, default=15, max_digits=5, null=True)),
                ('EEO', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
            ],
        ),
        migrations.CreateModel(
            name='EcommerceCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email_id', models.EmailField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=13)),
                ('joining_date', models.DateField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Block', 'Block')], max_length=12)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Specification Sheet', 'Specification Sheet'), ('Quantity Takeoff', 'Quantity Takeoff'), ('Addendum', 'Addendum'), ('Other', 'Other')], max_length=50)),
                ('document_name', models.CharField(max_length=100)),
                ('document_path', models.FileField(upload_to='documents/')),
                ('quantity_takeoffs_video', models.URLField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
            ],
        ),
        migrations.CreateModel(
            name='CrmContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/contact')),
                ('name', models.CharField(max_length=150)),
                ('company_name', models.CharField(max_length=150)),
                ('designation', models.CharField(max_length=150)),
                ('email_id', models.EmailField(max_length=150, unique=True)),
                ('phone', models.CharField(max_length=13)),
                ('lead_score', models.IntegerField()),
                ('tags', multiselectfield.db.fields.MultiSelectField(choices=[('Exiting', 'Exiting'), ('Lead', 'Lead'), ('Long-term', 'Long-term'), ('Partner', 'Partner')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='company_details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.company_details'),
        ),
        migrations.AddField(
            model_name='company',
            name='contact_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_contact_person', to='apps.person'),
        ),
        migrations.AddField(
            model_name='company',
            name='contractors',
            field=models.ManyToManyField(blank=True, related_name='company_contractors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='marketers',
            field=models.ManyToManyField(blank=True, related_name='companies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='companies', to='apps.project'),
        ),
        migrations.AddField(
            model_name='company',
            name='user_created',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='user_deleted',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleted_companies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='user_restored',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restored_companies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='user_updated',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_companies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BidHistory',
            fields=[
                ('bid_id', models.AutoField(primary_key=True, serialize=False)),
                ('bid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bid_outcome', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.company')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bidding_method', models.CharField(blank=True, choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Selective', 'Selective')], max_length=20, null=True)),
                ('bid_phase', models.CharField(blank=True, choices=[('Pre-Bid', 'Pre-Bid'), ('Bidding', 'Bidding'), ('Post-Bid', 'Post-Bid'), ('Open-Solicitation', 'Open Solicitation')], max_length=20, null=True)),
                ('project_completion_time', models.IntegerField(blank=True, null=True)),
                ('bid_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.bidhistory')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.project')),
            ],
        ),
    ]
